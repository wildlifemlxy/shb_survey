name: Build and deploy Node.js app to Azure Web App - shb-backend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:  
      contents: read  # This is required for actions/checkout
      id-token: write  # This is required for requesting the JWT
    environment:
      name: 'Production'

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_729D7355F8B94CC5B96770C56AC75F2C }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_8C80691E170F4336AA967122E9AD1C5B }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_67C1CCFE8FD44C7299DDB2A2D19C0E65 }}

      - name: Set the correct Azure subscription
        run: |
          az account set --subscription ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_67C1CCFE8FD44C7299DDB2A2D19C0E65 }}

      - name: Check if a deployment is in progress for shb-backend on Azure Linux
        run: |
            echo "Checking for active deployment process for shb-backend..."
            RESOURCE_GROUP="ECSS-Course-Management-System"
            DEPLOYMENT_STATUS=$(az webapp show --name shb-backend --resource-group $RESOURCE_GROUP --query "state" -o tsv)
        
            echo "Current deployment status: $DEPLOYMENT_STATUS"  # Show the deployment status
        
            if [ "$DEPLOYMENT_STATUS" == "Running" ]; then
              echo "Deployment is already in progress for shb-backend. Exiting early."
              echo "::set-output name=deployment_in_progress::true"  # Set the output variable to indicate deployment is in progress
            else
              echo "No deployment in progress for shb-backend. Proceeding with build."
              echo "::set-output name=deployment_in_progress::false"  # Set the output variable to indicate no deployment in progress
            fi
        
      - name: Fetch previous commit (before push)
        #if: ${{ steps.check_changes.deployment_in_progress == 'false' }}
        run: |
          git fetch origin main --depth=2
          echo "Before push commit:"
          git log --oneline -n 2  # Show the last 2 commits

      - name: Check for changes in the backend folder between before and after push
        #if: ${{ steps.check_changes.odeployment_in_progress == 'false' }}
        id: check_changes
        run: |
          echo "Checking for changes in the backend folder between before and after push..."
          git fetch origin main --depth=2  # Fetch the last 2 commits
          CHANGES=$(git diff --name-only HEAD~1 HEAD -- backend/)

          if [ -z "$CHANGES" ]; then
            echo "No changes detected in the backend folder. Skipping build and deploy."
            echo "::set-output name=changes_detected::false"
          else
            echo "Changes detected in the backend folder. Proceeding with build and deploy."
            echo "::set-output name=changes_detected::true"
          fi

      - name: Debug changes detected
        #if: ${{ steps.check_changes.outputs.changes_detected == 'true' }}  
        run: 'echo "Changes detected: ${{ steps.check_changes.outputs.changes_detected }}"'

      - name: Set up Node.js version
        #if: ${{steps.check_changes.outputs.changes_detected == 'true' }}  
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: npm install, build, and test
        #if: ${{ steps.check_changes.outputs.changes_detected == 'true' }} 
        run: |
          cd backend
          npm install
          npm run build --if-present
          # npm run test --if-present

      - name: Zip artifact for deployment (only backend folder)
        #if: ${{steps.check_changes.outputs.changes_detected == 'true' }}  
        run: |
          cd backend
          zip -r ../release.zip .  # Create zip file

      - name: Upload artifact for deployment
        #if: ${{ steps.check_changes.outputs.changes_detected == 'true' }} 
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

      - name: Deploy to Azure Web App (Linux)
        id: deploy-to-webapp
        #if: ${{ steps.check_changes.outputs.changes_detected == 'true' }} 
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'shb-backend'
          slot-name: 'Production'
          package: ./release.zip  # Use the zip file created from the backend folder
          
      - name: Ensure deployment continues in background
        #if: ${{ steps.check_changes.outputs.changes_detected == 'true' }} 
        run: |
          echo "Deployment started. This will continue in the background."